{"version":3,"sources":["components/noimage.jpg","components/Movies.js","components/SearchBar.js","components/Movie.js","components/YourList.js","containers/MainContainer.js","components/MovieDetails.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Movies","state","learnMore","nominated","getMoreInfo","setState","showMore","className","props","year","id","to","pathname","displayTitleAndYear","title","length","parts","split","slice","join","canNominate","onClick","event","addToList","nominateMovie","cantNominate","learnMoreOrNot","determineImage","image","alt","console","log","this","addBack","src","Button","variant","React","Component","SearchBar","movies","query","target","value","handleSubmit","preventDefault","fetch","then","res","json","data","renderMovies","undefined","Search","map","array","Title","Poster","Year","imdbID","list","showEmpty","Form","noValidate","onSubmit","Label","Control","type","name","onChange","Movie","movie","removeFromList","addBackToList","YourList","bannerCss","color","backgroundColor","fontSize","showList","showBanner","css","visibleTime","MainContainer","alert","Alert","Heading","filter","MovieDetails","rating","runTime","genre","director","writer","actors","plot","language","awards","poster","ratings","boxOffice","production","fetchMovie","location","Rated","release","Released","Runtime","Genre","Director","Writer","Actors","Plot","Language","Awards","Ratings","BoxOffice","Production","determineColors","Value","substring","colorArray","i","push","createBarChart","Source","colors","class","style","backgroundImage","App","exact","path","component","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6eee6028.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noimage.b9537641.jpg\";","import React from 'react';\nimport styles from '../App.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport alt from './noimage.jpg'\n\nclass Movies extends React.Component {\n\n    componentWillMount() {\n\n    }\n\n    state = {\n        learnMore: false,\n        nominated: false\n    }\n\n    getMoreInfo = () => {\n        this.setState({\n            learnMore: !this.state.learnMore\n        })\n    }\n\n    showMore = () => {\n        return <div className='title'>\n            Release Year: {this.props.year}\n            <br></br>\n            IMDB ID: {this.props.id}\n            <br></br>\n            <Link to={{\n                pathname: '/movies' + '/' + this.props.id,\n                state: {\n                    id: this.props.id\n                }\n            }}\n            >\n            <div>\n                Go to Movie Page\n            </div>\n            </Link>\n        </div>\n    }\n\n    displayTitleAndYear = () => {\n        let title\n        if (this.props.title.length > 20) {\n            let parts = this.props.title.split(' ')\n            title = parts.slice(0, 3)\n            title = parts.join(' ') + '...'\n        } else {\n            title = this.props.title\n        }\n        return <div>\n            <div className=\"title\">{title} <br></br> ({this.props.year})</div>\n        </div>\n    }\n\n    canNominate = () => {\n        return <button className=\"btn draw-border\" onClick={(event) => {this.props.addToList(this.props.title); this.nominateMovie()}}>Nominate</button>\n    }\n\n    cantNominate = () => {\n        return <button className=\"btn draw-border\">Nominated</button>\n    }\n\n    nominateMovie = () => {\n        this.setState({\n            nominated: !this.state.nominated\n        })\n    }\n\n    learnMoreOrNot = () => {\n        return this.state.learnMore ? \"Less Info\" : \"More Info\"\n    }\n\n    determineImage = () => {\n        if (this.props.image == 'N/A') {\n            return alt\n        } else {\n            return this.props.image\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"movie-listed-container\">\n                <div>\n                    {console.log(this.props.addBack)}\n                    {this.props.addBack != null && this.props.addBack == this.props.title ? this.nominateMovie() : null}\n                    <h1>{this.props.title ? this.displayTitleAndYear() : null}</h1>\n                    <br></br>\n                    <img className=\"card__image\" src={this.determineImage()} alt={alt}/>\n                    <br></br>\n                    <Button variant=\"primary\" onClick={(event) => this.getMoreInfo()}>{this.learnMoreOrNot()}</Button>\n                    <br></br>\n                    {this.state.learnMore ? this.showMore(): null}\n                    <br></br>\n                    {this.state.nominated ? this.cantNominate() : this.canNominate()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Movies","import React from 'react';\nimport Movies from './Movies.js';\nimport { Form, Button } from 'react-bootstrap';\nimport styles from '../App.css'\n\nclass SearchBar extends React.Component {\n    state = {\n        movies: null,\n        query: null,\n      }\n    \n    query = (event) => {\n      this.setState({\n        query: event.target.value\n      })\n    }\n    \n    handleSubmit = (event) => {\n      event.preventDefault();\n      fetch('http://www.omdbapi.com/?apikey=5218d9ce&s=' + this.state.query) \n        .then(res => res.json())\n        .then(data => \n          this.setState({\n            movies: data\n          })\n        )\n    }\n\n    renderMovies = () => {\n      return <div>\n        Results for: \"{this.state.query}\"\n        <div className=\"grid\">\n        {this.state.movies.Search == undefined ? 'Results Empty/Must Input Something' : this.state.movies.Search.map((array) => {\n        return <Movies\n                  title={array.Title}\n                  image={array.Poster}\n                  year={array.Year}\n                  id={array.imdbID}\n                  list={this.props.list}\n                  addToList={this.props.addToList}\n                  addBack={this.props.addBack}\n               />\n      })}\n        </div>\n      </div>\n    }\n\n    showEmpty = () => {\n      return <div className=\"empty\">\n        Nothing Searched Yet...\n      </div>\n    }\n    \n    render() {\n        return (\n          <div>\n            <Form noValidate onSubmit={this.handleSubmit}>\n              <Form.Label>Movie Title: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  onChange={(event) => this.query(event)}\n                />\n            </Form>\n            <br></br>\n            {this.state.movies ? this.renderMovies() : this.showEmpty()}\n          </div>\n        )\n    }\n}\n\nexport default SearchBar","import React from 'react'\n\nclass Movie extends React.Component {\n    render() {\n        return(\n            <div>\n                {this.props.movie}\n                <button onClick={(event) => {this.props.removeFromList(this.props.movie); this.props.addBackToList(this.props.movie)}}>Remove</button>\n            </div>\n        )\n    }\n}\n\nexport default Movie","import React from 'react';\nimport Movie from './Movie';\nimport styles from '../App.css';\nimport Banner from 'react-js-banner';\n\nclass YourList extends React.Component {\n    state = {\n      movies: null,\n      query: null,\n      bannerCss: { color: \"#FFF\", backgroundColor: \"red\", fontSize: 20 }\n    }\n\n    showList = () => {\n      return this.props.list.map(movie => \n        <Movie\n          movie={movie}\n          removeFromList={this.props.removeFromList}\n          addBackToList={this.props.addBackToList}\n        />\n      )\n    }\n\n    showBanner = () => {\n      return <div>\n        <Banner \n          title=\"Nominations complete! Feel free to add more if needed :)\"\n          css={this.state.bannerCss}\n          visibleTime={5000}\n        />\n      </div>\n    }\n    \n    render() {\n        return (\n          <div>\n            <h1>List</h1>\n            {this.props.list ? this.showList() : \"List is empty\"}\n            <br></br>\n            {this.props.list.length >= 5 ? this.showBanner() : null}\n          </div>\n        )\n    }\n}\n\nexport default YourList","import React from 'react';\nimport SearchBar from '../components/SearchBar.js';\nimport YourList from '../components/YourList.js';\nimport {Alert} from 'react-bootstrap';\n\nclass MainContainer extends React.Component {\n    state = {\n        movies: null,\n        query: null,\n        list: [],\n        addBack: null\n    }\n\n    alert = () => {\n        return <Alert variant=\"success\">\n        <Alert.Heading>Hey, nice to see you</Alert.Heading>\n            <p>\n                Aww yeah, you successfully read this important alert message. This example\n                text is going to run a bit longer so that you can see how spacing within an\n                alert works with this kind of content.\n            </p>\n            <hr />\n            <p className=\"mb-0\">\n                Whenever you need to, be sure to use margin utilities to keep things nice\n                and tidy.\n            </p>\n        </Alert>\n    }\n    \n    addToList = (movie) => {\n        this.setState({\n          list: [...this.state.list, movie]\n        })\n\n        this.alert()\n    }\n    \n    removeFromList = (movie) => {\n        this.setState({\n          list: this.state.list.filter(target => target != movie)\n        })\n    }\n\n    addBackToList = (movie) => {\n        this.setState({\n            addBack: movie\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"appTitle\">The Movie Mall</h1>\n                <YourList\n                    list={this.state.list}\n                    removeFromList={this.removeFromList}\n                    addBackToList={this.addBackToList}\n                ></YourList>\n                <SearchBar\n                    list={this.state.list}\n                    addToList={this.addToList}\n                    addBack={this.state.addBack}\n                ></SearchBar>\n            </div>\n        )\n    }\n}\n\nexport default MainContainer","import React from 'react';\nimport { BarChart } from 'react-chartkick';\nimport Chart from 'chart.js';\n\nclass MovieDetails extends React.Component {\n\n    state = {\n        title: null,\n        year: null,\n        rating: null,\n        runTime: null,\n        genre: null,\n        director: null,\n        writer: null,\n        actors: null,\n        plot: null,\n        language: null,\n        awards: null,\n        poster: null,\n        ratings: null,\n        boxOffice: null,\n        production: null\n    }\n\n    fetchMovie = () => {\n        fetch('http://www.omdbapi.com/?i=' + this.props.location.state.id + '&apikey=5218d9ce') \n            .then(res => res.json())\n            .then(data => \n                this.setState({\n                    title: data.Title,\n                    year: data.Year,\n                    rating: data.Rated,\n                    release: data.Released,\n                    runTime: data.Runtime,\n                    genre: data.Genre,\n                    director: data.Director,\n                    writer: data.Writer, \n                    actors: data.Actors,\n                    plot: data.Plot,\n                    language: data.Language,\n                    awards: data.Awards,\n                    poster: data.Poster,\n                    ratings: data.Ratings,\n                    boxOffice: data.BoxOffice,\n                    production: data.Production\n                })\n            )\n    }\n\n    determineColors = () => {\n        let array = [this.state.ratings[0].Value.substring(0, 3) * 10, this.state.ratings[1].Value.substring(0, 2), this.state.ratings[2].Value.substring(0, 2)]\n        let colorArray = []\n        for (let i=0; i<array.length; i++) {\n          if (array[i] >= 80) {\n            colorArray.push('green')\n          } else if (array[i] < 80 && array[i] >= 60) {\n            colorArray.push('orange')\n          } else {\n            colorArray.push('red')\n          }\n        }\n        return [colorArray]\n    }\n\n    createBarChart = () => {\n        console.log(this.state.ratings)\n        return <div>\n            Ratings:\n            <BarChart\n                data={[\n                        [this.state.ratings[0].Source, this.state.ratings[0].Value.substring(0, 3) * 10],\n                        [this.state.ratings[1].Source, this.state.ratings[1].Value.substring(0, 2)],\n                        [this.state.ratings[2].Source, this.state.ratings[2].Value.substring(0, 2)],\n                    ]}\n                colors={this.determineColors()}\n            />\n        </div>\n    }\n\n    render() {\n        return (\n            <div className=\"background\">\n                <div class=\"movie-container\">\n                    <div class=\"cellphone-container\">    \n                        <div class=\"movie\">       \n                            <div class=\"menu\"><i class=\"material-icons\"></i></div>\n                            <div class=\"movie-img\" style={{backgroundImage: `url(${this.state.poster})`}}></div>\n                            <div class=\"text-movie-cont\">\n                            <div class=\"mr-grid\">\n                                <div class=\"col1\">\n                                    <h1 className=\"movieTitle\">{this.state.title ? this.state.title : null}</h1>\n                                    <div class=\"movie-gen\">\n                                        {this.state.rating ? this.state.rating : null}/\n                                        {this.state.runTime ? this.state.runTime : null}/\n                                        {this.state.genre ? this.state.genre : null}\n                                    </div>\n                                    <br></br>\n                                    <div class=\"movie-gen\">\n                                        Director: {this.state.director ? this.state.director : null}\n                                        <br></br>\n                                        Production: {this.state.production ? this.state.production : null}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='summary'>\n                                <div class=\"mr-grid summary-row\">\n                                    <div class=\"col2\">\n                                    <h5>SUMMARY</h5>\n                                    </div>\n                                </div>\n                                <div class=\"mr-grid\">\n                                    <div class=\"col1\">\n                                    <p class=\"movie-description\">{this.state.plot ? this.state.plot : null}</p>\n                                    </div>\n                                </div>\n                                <div class=\"mr-grid actors-row\">\n                                    <div class=\"col1\">\n                                        <p class=\"movie-actors\">Actors: {this.state.actors ? this.state.actors : null}</p>\n                                    </div>\n                                </div>\n                                <div class=\"mr-grid actors-row\">\n                                    <div class=\"col1\">\n                                        <p class=\"movie-actors\">Writers: {this.state.writer ? this.state.writer : null}</p>\n                                    </div>\n                                </div>\n                                <div class=\"mr-grid actors-row\">\n                                    <div class=\"col1\">\n                                        <p class=\"movie-actors\">Awards: {this.state.awards ? this.state.awards : null}</p>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {console.log(this.state)}\n                {this.props.location.state.id ? this.fetchMovie() : null}\n                {this.state.ratings ? this.createBarChart() : null}\n            </div>\n        )\n    }\n}\n\nexport default MovieDetails","import React from 'react';\nimport MainContainer from './MainContainer.js'\nimport MovieDetails from '../components/MovieDetails.js'\nimport styles from '../App.css';\nimport { BrowserRouter, Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={MainContainer}/>\n          <Route exact path=\"/movies/:id\" render={(props) => <MovieDetails {...props} />}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><Route path='/' component={App}/></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}